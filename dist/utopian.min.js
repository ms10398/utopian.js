"use strict";var utopian={},API_HOST="https://api.utopian.io/api",ENDPOINT_MODERATORS=API_HOST+"/moderators",ENDPOINT_SPONSORS=API_HOST+"/sponsors",ENDPOINT_POST=API_HOST+"/posts",ENDPOINT_STATS=API_HOST+"/stats",GITHUB_REPO_URL="https://api.github.com/repos/";function getGithubRepoIdByRepoName(repoName){return new Promise(function(resolve,reject){$.ajax({url:""+GITHUB_REPO_URL+repoName,success:function(data){resolve(data.id)},error:function(xhr,status,_error9){reject(_error9)}})})}utopian.getModerators=function(){return new Promise(function(resolve,reject){$.ajax({url:ENDPOINT_MODERATORS,success:function(result){resolve(result)},error:function(xhr,status,_error){reject(_error)}})})},utopian.getSponsors=function(){return new Promise(function(resolve,reject){$.ajax({url:ENDPOINT_SPONSORS,success:function(result){resolve(result)},error:function(xhr,status,_error2){reject(_error2)}})})},utopian.getStats=function(){return new Promise(function(resolve,reject){$.ajax({url:ENDPOINT_STATS,success:function(result){resolve(result)},error:function(xhr,status,_error3){reject(_error3)}})})},utopian.getModerator=function(username){return new Promise(function(resolve,reject){utopian.getModerators().then(function(moderators){moderators.results.filter(function(moderator){moderator.account===username&&!1===moderator.banned&&!0===moderator.reviewed&&resolve(moderator)})}).catch(function(err){return reject(err)})})},utopian.getSponsor=function(username){return new Promise(function(resolve,reject){utopian.getSponsors().then(function(sponsors){sponsors.results.filter(function(sponsor){sponsor.account===username&&resolve(sponsor)})}).catch(function(err){return reject(err)})})},utopian.getPosts=function(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(options.limit>20||options.limit<1)&&(options.limit=20),0===Object.keys(options).length&&(options.limit=20,options.skip=0);var ENDPOINT_POSTS=ENDPOINT_POST;for(var x in ENDPOINT_POSTS+="?",options)ENDPOINT_POSTS=ENDPOINT_POSTS+(x+"=")+options[x]+"&";return ENDPOINT_POSTS=ENDPOINT_POSTS.slice(0,-1),new Promise(function(resolve,reject){$.ajax({url:ENDPOINT_POSTS,success:function(result){resolve(result)},error:function(xhr,status,_error4){reject(_error4)}})})},utopian.getTotalPostCount=function(){var ENDPOINT_POSTS=ENDPOINT_POST;return ENDPOINT_POSTS+="?limit=1&skip=0",new Promise(function(resolve,reject){$.ajax({url:ENDPOINT_POSTS,success:function(result){resolve(result.total)},error:function(xhr,status,_error5){reject(_error5)}})})},utopian.getPost=function(username,permlink){return new Promise(function(resolve,reject){$.ajax({url:ENDPOINT_POST+"/"+username+"/"+permlink,success:function(data){resolve(data)},error:function(xhr,status,_error6){reject(_error6)}})})},utopian.getPostURL=function(postID){return new Promise(function(resolve,reject){$.ajax({url:ENDPOINT_POST+"/byid/"+postID,success:function(data){resolve("https://utopian.io"+data.url)},error:function(xhr,status,_error7){reject(_error7)}})})},utopian.getPostsByAuthor=function(username){var options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},ENDPOINT_POSTS=ENDPOINT_POST;for(var x in(options.limit>20||options.limit<1)&&(options.limit=20),0===Object.keys(options).length&&(options.limit=20,options.skip=0),options.section="author",options.author=username,ENDPOINT_POSTS+="?",options)ENDPOINT_POSTS=ENDPOINT_POSTS+(x+"=")+options[x]+"&";return ENDPOINT_POSTS=ENDPOINT_POSTS.slice(0,-1),new Promise(function(resolve,reject){$.ajax({url:ENDPOINT_POSTS,success:function(result){resolve(result)},error:function(xhr,status,_error8){reject(_error8)}})})},utopian.getPostsByGithubProject=function(repoName,options){return new Promise(function(resolve,reject){return getGithubRepoIdByRepoName(repoName).then(function(projectId){return utopian.getPosts(Object.assign({section:"project",sortBy:"created",platform:"github",projectId:projectId,type:"all"},options||{})).then(resolve).catch(reject)}).catch(reject)})};